2025-04-01 02:01:05,379 - MainThread - sqlmesh.core.config.connection - INFO - Creating new DuckDB adapter for data files: {'db.db'} (connection.py:340)
2025-04-01 02:01:06,606 - MainThread - sqlmesh.core.config.connection - INFO - Creating new DuckDB adapter for in-memory database (connection.py:342)
2025-04-01 02:01:06,776 - MainThread - sqlmesh.core.config.connection - INFO - Using existing DuckDB adapter due to overlapping data file: db.db (connection.py:330)
2025-04-01 02:02:02,646 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Listing data objects in schema db.sqlmesh__sqlmesh_example (evaluator.py:323)
2025-04-01 02:02:02,647 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2113)
2025-04-01 02:02:02,649 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2113)
2025-04-01 02:02:02,653 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT table_name AS name, table_schema AS schema, CASE table_type WHEN 'BASE TABLE' THEN 'table' WHEN 'VIEW' THEN 'view' WHEN 'LOCAL TEMPORARY' THEN 'table' END AS type FROM system.information_schema.tables WHERE (table_catalog = 'db' AND table_schema = 'sqlmesh__sqlmesh_example') AND table_name IN ('sqlmesh_example__full_model__2278521865', 'sqlmesh_example__incremental_model__1112624828', 'sqlmesh_example__full_model__2278521865__dev', 'sqlmesh_example__seed_model__2185867172') (base.py:2113)
2025-04-01 02:02:02,702 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Creating schema 'db.sqlmesh__sqlmesh_example' (evaluator.py:1070)
2025-04-01 02:02:02,702 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE SCHEMA IF NOT EXISTS "db"."sqlmesh__sqlmesh_example" (base.py:2113)
2025-04-01 02:02:02,710 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Creating table 'db.sqlmesh__sqlmesh_example.sqlmesh_example__incremental_model__1112624828' (evaluator.py:1422)
2025-04-01 02:02:02,711 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE TABLE IF NOT EXISTS "db"."sqlmesh__sqlmesh_example"."sqlmesh_example__incremental_model__1112624828" ("id" INT, "item_id" INT, "event_date" DATE, "new_column" TEXT) (base.py:2113)
2025-04-01 02:02:02,716 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "db"."sqlmesh__sqlmesh_example"."sqlmesh_example__incremental_model__1112624828"."new_column" IS 'adding new column' (base.py:2113)
2025-04-01 02:02:02,719 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Dry running model 'sqlmesh_example.incremental_model' (evaluator.py:1444)
2025-04-01 02:02:02,720 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT "seed_model"."id" AS "id", "seed_model"."item_id" AS "item_id", "seed_model"."event_date" AS "event_date", 'z' AS "new_column" FROM "db"."sqlmesh__sqlmesh_example"."sqlmesh_example__seed_model__2185867172" AS "seed_model" WHERE ("seed_model"."event_date" <= CAST('1970-01-01' AS DATE) AND "seed_model"."event_date" >= CAST('1970-01-01' AS DATE)) AND FALSE LIMIT 0 (base.py:2113)
2025-04-01 02:02:02,721 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Creating table 'db.sqlmesh__sqlmesh_example.sqlmesh_example__full_model__2278521865__dev' (evaluator.py:1422)
2025-04-01 02:02:02,721 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE TABLE IF NOT EXISTS "db"."sqlmesh__sqlmesh_example"."sqlmesh_example__full_model__2278521865__dev" ("item_id" INT, "num_orders" BIGINT) (base.py:2113)
2025-04-01 02:02:02,721 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Dry running model 'sqlmesh_example.full_model' (evaluator.py:1444)
2025-04-01 02:02:02,721 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT "incremental_model"."item_id" AS "item_id", COUNT(DISTINCT "incremental_model"."id") AS "num_orders" FROM "db"."sqlmesh__sqlmesh_example"."sqlmesh_example__incremental_model__1112624828" AS "incremental_model" WHERE FALSE GROUP BY "incremental_model"."item_id" LIMIT 0 (base.py:2113)
2025-04-01 02:02:02,771 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Evaluating snapshot SnapshotId<"db"."sqlmesh_example"."incremental_model": 2468408252> (evaluator.py:599)
2025-04-01 02:02:02,787 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Inserting batch (2020-01-01 00:00:00, 2025-03-31 00:00:00) into db.sqlmesh__sqlmesh_example.sqlmesh_example__incremental_model__1112624828' (evaluator.py:653)
2025-04-01 02:02:02,789 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: DELETE FROM "db"."sqlmesh__sqlmesh_example"."sqlmesh_example__incremental_model__1112624828" WHERE "event_date" BETWEEN CAST('2020-01-01' AS DATE) AND CAST('2025-03-30' AS DATE) (base.py:2113)
2025-04-01 02:02:02,789 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: INSERT INTO "db"."sqlmesh__sqlmesh_example"."sqlmesh_example__incremental_model__1112624828" ("id", "item_id", "event_date", "new_column") SELECT "id", "item_id", "event_date", "new_column" FROM (SELECT "seed_model"."id" AS "id", "seed_model"."item_id" AS "item_id", "seed_model"."event_date" AS "event_date", 'z' AS "new_column" FROM "db"."sqlmesh__sqlmesh_example"."sqlmesh_example__seed_model__2185867172" AS "seed_model" WHERE "seed_model"."event_date" <= CAST('2025-03-30' AS DATE) AND "seed_model"."event_date" >= CAST('2020-01-01' AS DATE)) AS "_subquery" WHERE "event_date" BETWEEN CAST('2020-01-01' AS DATE) AND CAST('2025-03-30' AS DATE) (base.py:2113)
2025-04-01 02:02:02,789 - MainThread - sqlmesh.core.state_sync.db.facade - INFO - Adding interval (2020-01-01 00:00:00, 2025-03-31 00:00:00) for snapshot SnapshotId<"db"."sqlmesh_example"."incremental_model": 2468408252> (facade.py:503)
2025-04-01 02:02:02,789 - MainThread - sqlmesh.core.state_sync.db.interval - INFO - Pushing intervals for snapshot SnapshotId<"db"."sqlmesh_example"."incremental_model": 2468408252> (interval.py:210)
2025-04-01 02:02:02,817 - MainThread - sqlmesh.core.state_sync.db.facade - INFO - Promoting environment 'dev' (facade.py:165)
2025-04-01 02:02:02,844 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Creating schema 'db.sqlmesh_example__dev' (evaluator.py:1070)
2025-04-01 02:02:02,844 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE SCHEMA IF NOT EXISTS "db"."sqlmesh_example__dev" (base.py:2113)
2025-04-01 02:02:02,844 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Updating view 'db.sqlmesh_example__dev.incremental_model' to point at table 'db.sqlmesh__sqlmesh_example.sqlmesh_example__incremental_model__1112624828' (evaluator.py:1377)
2025-04-01 02:02:02,844 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE OR REPLACE VIEW "db"."sqlmesh_example__dev"."incremental_model" AS SELECT * FROM "db"."sqlmesh__sqlmesh_example"."sqlmesh_example__incremental_model__1112624828" (base.py:2113)
2025-04-01 02:02:02,844 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Updating view 'db.sqlmesh_example__dev.full_model' to point at table 'db.sqlmesh__sqlmesh_example.sqlmesh_example__full_model__2278521865' (evaluator.py:1377)
2025-04-01 02:02:02,844 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE OR REPLACE VIEW "db"."sqlmesh_example__dev"."full_model" AS SELECT * FROM "db"."sqlmesh__sqlmesh_example"."sqlmesh_example__full_model__2278521865" (base.py:2113)
2025-04-01 02:02:02,855 - MainThread - sqlmesh.core.state_sync.db.environment - INFO - Finalizing environment 'dev' (environment.py:135)
2025-04-01 02:02:02,925 - MainThread - root - INFO - Shutting down the event dispatcher (dispatcher.py:159)
